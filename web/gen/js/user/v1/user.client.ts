// @generated by protobuf-ts 2.8.3 with parameter long_type_string
// @generated from protobuf file "user/v1/user.proto" (package "user.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./user";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PasswordLoginResponse } from "./user";
import type { PasswordLoginRequest } from "./user";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service user.v1.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: PasswordLogin(user.v1.PasswordLoginRequest) returns (user.v1.PasswordLoginResponse);
     */
    passwordLogin(input: PasswordLoginRequest, options?: RpcOptions): UnaryCall<PasswordLoginRequest, PasswordLoginResponse>;
}
/**
 * @generated from protobuf service user.v1.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: PasswordLogin(user.v1.PasswordLoginRequest) returns (user.v1.PasswordLoginResponse);
     */
    passwordLogin(input: PasswordLoginRequest, options?: RpcOptions): UnaryCall<PasswordLoginRequest, PasswordLoginResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<PasswordLoginRequest, PasswordLoginResponse>("unary", this._transport, method, opt, input);
    }
}
